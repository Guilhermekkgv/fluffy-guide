pcall(function()    game:GetService('CoreGui'):FindFirstChild('ui'):Remove()end)local TweenService = game:GetService("TweenService")local UserInputService = game:GetService("UserInputService")local RunService = game:GetService("RunService")local Players = game:GetService("Players")local Library = {}local LocalPlayer = Players.LocalPlayerlocal Player = LocalPlayerlocal Mouse = Player:GetMouse()local ProtectGui = protectgui or (syn and syn.protect_gui) or function() endfunction Library:Window(title, config)    config = config or {}    local windowSize = config.Size or UDim2.new(0, 470, 0, 283)        local parent    if RunService:IsStudio() then        if gethui then            parent = gethui()        else            parent = LocalPlayer:FindFirstChild("PlayerGui")        end    elseif gethui then        parent = gethui()    else        parent = game:GetService("CoreGui")    end        local ui = Instance.new("ScreenGui")    ui.Name = "ui"    ui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling    ui.IgnoreGuiInset = true    ui.ResetOnSpawn = false        task.defer(function()        ProtectGui(ui)        ui.Parent = parent    end)        local Main = Instance.new("Frame")    Main.Name = "Main"    Main.Parent = ui    Main.BackgroundColor3 = Color3.fromRGB(30, 30, 30)    Main.BorderSizePixel = 0    Main.Position = UDim2.new(0.5, 0, 0.5, 0)    Main.AnchorPoint = Vector2.new(0.5, 0.5)    Main.Size = windowSize    Main.Active = true    Main.Selectable = true        local dragging = false    local dragInput, dragStart, startPos        local function updateInput(input)        pcall(function()            local Delta = input.Position - dragStart            Main.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + Delta.X, startPos.Y.Scale, startPos.Y.Offset + Delta.Y)        end)    end        Main.InputBegan:Connect(function(input)        pcall(function()            if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then                dragging = true                dragStart = input.Position                startPos = Main.Position                                input.Changed:Connect(function()                    pcall(function()                        if input.UserInputState == Enum.UserInputState.End then                            dragging = false                        end                    end)                end)            end        end)    end)        Main.InputChanged:Connect(function(input)        pcall(function()            if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then                dragInput = input            end        end)    end)        UserInputService.InputChanged:Connect(function(input)        pcall(function()            if input == dragInput and dragging then                updateInput(input)            end        end)    end)        local UICorner = Instance.new("UICorner")    UICorner.CornerRadius = UDim.new(0, 6)    UICorner.Parent = Main        local Shadow = Instance.new("ImageLabel")    Shadow.Name = "Shadow"    Shadow.Parent = Main    Shadow.AnchorPoint = Vector2.new(0.5, 0.5)    Shadow.BackgroundColor3 = Color3.fromRGB(255, 255, 255)    Shadow.BackgroundTransparency = 1.000    Shadow.Position = UDim2.new(0.5, 0, 0.5, 0)    Shadow.Size = UDim2.new(1, 30, 1, 30)    Shadow.ZIndex = 0    Shadow.Image = "rbxassetid://5554236805"    Shadow.ImageColor3 = Color3.fromRGB(0, 0, 0)    Shadow.ScaleType = Enum.ScaleType.Slice    Shadow.SliceCenter = Rect.new(23, 23, 277, 277)        local Top = Instance.new("Frame")    Top.Name = "Top"    Top.Parent = Main    Top.BackgroundColor3 = Color3.fromRGB(24, 24, 24)    Top.BorderSizePixel = 0    Top.Size = UDim2.new(1, 0, 0, 34)        local TopCorner = Instance.new("UICorner")    TopCorner.CornerRadius = UDim.new(0, 6)    TopCorner.Parent = Top        local TopCover = Instance.new("Frame")    TopCover.Name = "Cover"    TopCover.Parent = Top    TopCover.AnchorPoint = Vector2.new(0.5, 1)    TopCover.BackgroundColor3 = Color3.fromRGB(24, 24, 24)    TopCover.BorderSizePixel = 0    TopCover.Position = UDim2.new(0.5, 0, 1, 0)    TopCover.Size = UDim2.new(1, 0, 0, 4)        local Line = Instance.new("Frame")    Line.Name = "Line"    Line.Parent = Top    Line.AnchorPoint = Vector2.new(0.5, 1)    Line.BackgroundColor3 = Color3.fromRGB(255, 255, 255)    Line.BackgroundTransparency = 0.920    Line.Position = UDim2.new(0.5, 0, 1, 1)    Line.Size = UDim2.new(1, 0, 0, 1)        local Logo = Instance.new("ImageLabel")    Logo.Name = "Logo"    Logo.Parent = Top    Logo.AnchorPoint = Vector2.new(0, 0.5)    Logo.BackgroundColor3 = Color3.fromRGB(255, 255, 255)    Logo.BackgroundTransparency = 1.000    Logo.Position = UDim2.new(0, 4, 0.5, 0)    Logo.Size = UDim2.new(0, 26, 0, 30)    Logo.Image = "http://www.roblox.com/asset/?id=7803241868"    Logo.ImageColor3 = Color3.fromRGB(232, 17, 85)        local Minimize = Instance.new("ImageButton")    Minimize.Name = "Minimize"    Minimize.Parent = Top    Minimize.AnchorPoint = Vector2.new(1, 0.5)    Minimize.BackgroundColor3 = Color3.fromRGB(255, 255, 255)    Minimize.BackgroundTransparency = 1.000    Minimize.Position = UDim2.new(1, -30, 0.5, 0)    Minimize.Size = UDim2.new(0, 20, 0, 20)    Minimize.Image = "rbxassetid://7733771811"    Minimize.ImageColor3 = Color3.fromRGB(199, 199, 199)    Minimize.ScaleType = Enum.ScaleType.Crop        local MinimizedIcon = Instance.new("ImageButton")    MinimizedIcon.Name = "MinimizedIcon"    MinimizedIcon.Parent = ui    MinimizedIcon.AnchorPoint = Vector2.new(1, 1)    MinimizedIcon.BackgroundColor3 = Color3.fromRGB(232, 17, 85)    MinimizedIcon.BackgroundTransparency = 0    MinimizedIcon.BorderSizePixel = 0    MinimizedIcon.Position = UDim2.new(1, -20, 1, -20)    MinimizedIcon.Size = UDim2.new(0, 40, 0, 40)    MinimizedIcon.Visible = false    MinimizedIcon.ZIndex = 10    MinimizedIcon.Image = "http://www.roblox.com/asset/?id=7803241868"        local MinimizedCorner = Instance.new("UICorner")    MinimizedCorner.CornerRadius = UDim.new(0, 8)    MinimizedCorner.Parent = MinimizedIcon        local minDragging = false    local minDragInput, minDragStart, minStartPos        local function updateMinInput(input)        pcall(function()            local Delta = input.Position - minDragStart            MinimizedIcon.Position = UDim2.new(minStartPos.X.Scale, minStartPos.X.Offset + Delta.X, minStartPos.Y.Scale, minStartPos.Y.Offset + Delta.Y)        end)    end        MinimizedIcon.InputBegan:Connect(function(input)        pcall(function()            if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then                minDragging = true                minDragStart = input.Position                minStartPos = MinimizedIcon.Position                                input.Changed:Connect(function()                    pcall(function()                        if input.UserInputState == Enum.UserInputState.End then                            minDragging = false                        end                    end)                end)            end        end)    end)        MinimizedIcon.InputChanged:Connect(function(input)        pcall(function()            if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then                minDragInput = input            end        end)    end)        UserInputService.InputChanged:Connect(function(input)        pcall(function()            if input == minDragInput and minDragging then                updateMinInput(input)            end        end)    end)        Minimize.MouseButton1Click:Connect(function()        pcall(function()            Main.Visible = false            MinimizedIcon.Visible = true        end)    end)        Minimize.MouseEnter:Connect(function()        pcall(function()            TweenService:Create(Minimize, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {ImageColor3 = Color3.fromRGB(255, 255, 255)}):Play()        end)    end)        Minimize.MouseLeave:Connect(function()        pcall(function()            TweenService:Create(Minimize, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {ImageColor3 = Color3.fromRGB(166, 166, 166)}):Play()        end)    end)        MinimizedIcon.MouseButton1Click:Connect(function()        pcall(function()            Main.Visible = true            MinimizedIcon.Visible = false        end)    end)        local Close = Instance.new("ImageButton")    Close.Name = "Close"    Close.Parent = Top    Close.AnchorPoint = Vector2.new(1, 0.5)    Close.BackgroundColor3 = Color3.fromRGB(255, 255, 255)    Close.BackgroundTransparency = 1.000    Close.Position = UDim2.new(1, -6, 0.5, 0)    Close.Size = UDim2.new(0, 20, 0, 20)    Close.Image = "http://www.roblox.com/asset/?id=7755372427"    Close.ImageColor3 = Color3.fromRGB(199, 199, 199)    Close.ScaleType = Enum.ScaleType.Crop        Close.MouseButton1Click:Connect(function()        pcall(function()            ui:Destroy()        end)    end)        Close.MouseEnter:Connect(function()        TweenService:Create(Close, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {ImageColor3 = Color3.fromRGB(255, 255, 255)}):Play()    end)        Close.MouseLeave:Connect(function()        TweenService:Create(Close, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {ImageColor3 = Color3.fromRGB(166, 166, 166)}):Play()    end)        local GameName = Instance.new("TextLabel")    GameName.Name = "GameName"    GameName.Parent = Top    GameName.AnchorPoint = Vector2.new(0, 0.5)    GameName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)    GameName.BackgroundTransparency = 1.000    GameName.Position = UDim2.new(0, 32, 0.5, 0)    GameName.Size = UDim2.new(0, 165, 0, 22)    GameName.Font = Enum.Font.Gotham    GameName.Text = title or "Game Name"    GameName.TextColor3 = Color3.fromRGB(232, 17, 85)    GameName.TextSize = 14.000    GameName.TextXAlignment = Enum.TextXAlignment.Left        local Tabs = Instance.new("Frame")    Tabs.Name = "Tabs"    Tabs.Parent = Main    Tabs.BackgroundColor3 = Color3.fromRGB(33, 33, 33)    Tabs.BorderSizePixel = 0    Tabs.Position = UDim2.new(0, 0, 0, 35)    Tabs.Size = UDim2.new(0, 122, 1, -35)        local TabsCorner = Instance.new("UICorner")    TabsCorner.CornerRadius = UDim.new(0, 6)    TabsCorner.Parent = Tabs        local TabsCover = Instance.new("Frame")    TabsCover.Name = "Cover"    TabsCover.Parent = Tabs    TabsCover.AnchorPoint = Vector2.new(1, 0.5)    TabsCover.BackgroundColor3 = Color3.fromRGB(33, 33, 33)    TabsCover.BorderSizePixel = 0    TabsCover.Position = UDim2.new(1, 0, 0.5, 0)    TabsCover.Size = UDim2.new(0, 5, 1, 0)        local TabsContainer = Instance.new("Frame")    TabsContainer.Name = "TabsContainer"    TabsContainer.Parent = Tabs    TabsContainer.BackgroundColor3 = Color3.fromRGB(255, 255, 255)    TabsContainer.BackgroundTransparency = 1.000    TabsContainer.Size = UDim2.new(1, 0, 1, 0)        local TabsList = Instance.new("UIListLayout")    TabsList.Name = "TabsList"    TabsList.Parent = TabsContainer    TabsList.HorizontalAlignment = Enum.HorizontalAlignment.Center    TabsList.SortOrder = Enum.SortOrder.LayoutOrder    TabsList.Padding = UDim.new(0, 5)        local TabsPadding = Instance.new("UIPadding")    TabsPadding.Parent = TabsContainer    TabsPadding.PaddingTop = UDim.new(0, 5)        local Pages = Instance.new("Frame")    Pages.Name = "Pages"    Pages.Parent = Main    Pages.BackgroundColor3 = Color3.fromRGB(30, 30, 30)    Pages.BorderSizePixel = 0    Pages.Position = UDim2.new(0, 130, 0, 42)    Pages.Size = UDim2.new(1, -138, 1, -50)        local PagesCorner = Instance.new("UICorner")    PagesCorner.CornerRadius = UDim.new(0, 6)    PagesCorner.Parent = Pages        local Resize = Instance.new("ImageButton")    Resize.Name = "Resize"    Resize.Parent = Main    Resize.AnchorPoint = Vector2.new(1, 1)    Resize.BackgroundTransparency = 1.000    Resize.Position = UDim2.new(1, -4, 1, -4)    Resize.Size = UDim2.new(0, 16, 0, 16)    Resize.ZIndex = 2    Resize.Image = "rbxassetid://3926307971"    Resize.ImageColor3 = Color3.fromRGB(186, 13, 68)    Resize.ImageRectOffset = Vector2.new(204, 364)    Resize.ImageRectSize = Vector2.new(36, 36)        local resizing = false    local resizeStart, startSize        Resize.InputBegan:Connect(function(input)        pcall(function()            if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then                resizing = true                startSize = Main.Size                resizeStart = Vector2.new(input.Position.X, input.Position.Y)                                input.Changed:Connect(function()                    pcall(function()                        if input.UserInputState == Enum.UserInputState.End then                            resizing = false                        end                    end)                end)            end        end)    end)        UserInputService.InputChanged:Connect(function(input)        pcall(function()            if resizing and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then                local currentPos = Vector2.new(input.Position.X, input.Position.Y)                local delta = currentPos - resizeStart                local newWidth = math.max(470, startSize.X.Offset + delta.X)                local newHeight = math.max(283, startSize.Y.Offset + delta.Y)                Main.Size = UDim2.new(0, newWidth, 0, newHeight)            end        end)    end)        local TabFunctions = {}        function TabFunctions:Tab(tabInfo)        local title, icon, default        if type(tabInfo) == "table" then            title = tabInfo[1] or "Tab"            icon = tabInfo[2]            default = tabInfo[3]        else            title = tabInfo or "Tab"        end                local TabButton = Instance.new("TextButton")        TabButton.Name = "TabButton"        TabButton.Parent = TabsContainer        TabButton.BackgroundColor3 = Color3.fromRGB(232, 17, 85)        TabButton.BackgroundTransparency = 1        TabButton.Size = UDim2.new(1, -12, 0, 30)        TabButton.AutoButtonColor = false        TabButton.Font = Enum.Font.Gotham        TabButton.Text = ""        TabButton.TextColor3 = Color3.fromRGB(72, 72, 72)        TabButton.TextSize = 14.000                local TabCorner = Instance.new("UICorner")        TabCorner.CornerRadius = UDim.new(0, 6)        TabCorner.Parent = TabButton                local TabContent = Instance.new("Frame")        TabContent.Name = "TabContent"        TabContent.Parent = TabButton        TabContent.BackgroundTransparency = 1        TabContent.Size = UDim2.new(1, 0, 1, 0)                local Icon = nil        if icon then            Icon = Instance.new("ImageLabel")            Icon.Name = "Icon"            Icon.Parent = TabContent            Icon.BackgroundTransparency = 1            Icon.Position = UDim2.new(0, 5, 0.5, -10)            Icon.Size = UDim2.new(0, 20, 0, 20)            Icon.Image = icon            Icon.ImageColor3 = Color3.fromRGB(232, 17, 85)        end                local TextLabel = Instance.new("TextLabel")        TextLabel.Name = "TextLabel"        TextLabel.Parent = TabContent        TextLabel.BackgroundTransparency = 1        TextLabel.Size = UDim2.new(1, 0, 1, 0)        TextLabel.Font = Enum.Font.Gotham        TextLabel.Text = title        TextLabel.TextColor3 = Color3.fromRGB(72, 72, 72)        TextLabel.TextSize = 14.000        TextLabel.TextXAlignment = Enum.TextXAlignment.Center                if Icon then            TextLabel.Position = UDim2.new(0, 25, 0, 0)            TextLabel.TextXAlignment = Enum.TextXAlignment.Left        end                local Page = Instance.new("ScrollingFrame")        Page.Name = "Page"        Page.Visible = false        Page.Parent = Pages        Page.Active = true        Page.BackgroundColor3 = Color3.fromRGB(255, 255, 255)        Page.BackgroundTransparency = 1.000        Page.BorderSizePixel = 0        Page.Size = UDim2.new(1, 0, 1, 0)        Page.CanvasPosition = Vector2.new(0, 0)        Page.ScrollBarThickness = 2        Page.ScrollBarImageColor3 = Color3.fromRGB(255, 24, 101)                local PageList = Instance.new("UIListLayout")        PageList.Parent = Page        PageList.HorizontalAlignment = Enum.HorizontalAlignment.Center        PageList.SortOrder = Enum.SortOrder.LayoutOrder        PageList.Padding = UDim.new(0, 6)                local PagePadding = Instance.new("UIPadding")        PagePadding.Parent = Page        PagePadding.PaddingTop = UDim.new(0, 5)                PageList:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()            Page.CanvasSize = UDim2.new(0, 0, 0, PageList.AbsoluteContentSize.Y)        end)                TabButton.MouseButton1Click:Connect(function()            pcall(function()                for _, v in next, Pages:GetChildren() do                    if v:IsA("ScrollingFrame") then                        v.Visible = false                    end                end                Page.Visible = true                                for _, v in next, TabsContainer:GetChildren() do                    if v.Name == 'TabButton' then                        TweenService:Create(v, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()                        if v:FindFirstChild("TabContent") and v.TabContent:FindFirstChild("TextLabel") then                            TweenService:Create(v.TabContent.TextLabel, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {TextColor3 = Color3.fromRGB(72, 72, 72)}):Play()                        end                    end                end                                TweenService:Create(TabButton, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundTransparency = 0.6}):Play()                TweenService:Create(TextLabel, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {TextColor3 = Color3.fromRGB(255, 255, 255)}):Play()            end)        end)                if #TabsContainer:GetChildren() == 1 or default then            Page.Visible = true            TweenService:Create(TabButton, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundTransparency = 0.6}):Play()            TweenService:Create(TextLabel, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {TextColor3 = Color3.fromRGB(255, 255, 255)}):Play()                        if default then                for _, v in next, Pages:GetChildren() do                    if v:IsA("ScrollingFrame") and v ~= Page then                        v.Visible = false                    end                end                for _, v in next, TabsContainer:GetChildren() do                    if v.Name == 'TabButton' and v ~= TabButton then                        TweenService:Create(v, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()                        if v:FindFirstChild("TabContent") and v.TabContent:FindFirstChild("TextLabel") then                            TweenService:Create(v.TabContent.TextLabel, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {TextColor3 = Color3.fromRGB(72, 72, 72)}):Play()                        end                    end                end            end        end                local PageFunctions = {}                function PageFunctions:Section(sectionInfo)            local name, icon, center, size, iconColor            if type(sectionInfo) == "table" then                name = sectionInfo.Name or sectionInfo[1] or "Section"                icon = sectionInfo.Icon or sectionInfo[2]                center = sectionInfo.Center                size = sectionInfo.Size or 14                iconColor = sectionInfo.IconColor or Color3.fromRGB(232, 17, 85)            else                name = sectionInfo or "Section"                size = 14                iconColor = Color3.fromRGB(232, 17, 85)            end                        local Section = Instance.new("Frame")            Section.Name = "Section"            Section.Parent = Page            Section.BackgroundColor3 = Color3.fromRGB(255, 255, 255)            Section.BackgroundTransparency = 1.000            Section.BorderSizePixel = 0            Section.Size = UDim2.new(1, -12, 0, 20)                        local SectionLabel = Instance.new("TextLabel")            SectionLabel.Name = "SectionLabel"            SectionLabel.Parent = Section            SectionLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)            SectionLabel.BackgroundTransparency = 1.000            SectionLabel.Position = icon and UDim2.new(0, size + 5, 0, 0) or UDim2.new(0, 0, 0, 0)            SectionLabel.Size = icon and UDim2.new(1, -(size + 5), 1, 0) or UDim2.new(1, 0, 1, 0)            SectionLabel.Font = Enum.Font.GothamBold            SectionLabel.Text = name            SectionLabel.TextColor3 = Color3.fromRGB(232, 17, 85)            SectionLabel.TextSize = size            SectionLabel.TextXAlignment = center and Enum.TextXAlignment.Center or Enum.TextXAlignment.Left                        if icon then                local SectionIcon = Instance.new("ImageLabel")                SectionIcon.Name = "SectionIcon"                SectionIcon.Parent = Section                SectionIcon.BackgroundTransparency = 1                SectionIcon.Position = UDim2.new(0, 0, 0, 0)                SectionIcon.Size = UDim2.new(0, size, 0, size)                SectionIcon.Image = icon                SectionIcon.ImageColor3 = iconColor            end        end                function PageFunctions:Button(name, callback, description)            local Button = Instance.new("TextButton")            Button.Name = "Button"            Button.Parent = Page            Button.BackgroundColor3 = Color3.fromRGB(42, 42, 42)            Button.BorderSizePixel = 0            Button.Size = UDim2.new(1, -12, 0, 30)            Button.AutoButtonColor = false            Button.Font = Enum.Font.Gotham            Button.Text = ""            Button.TextColor3 = Color3.fromRGB(255, 255, 255)            Button.TextSize = 14.000                        local ButtonCorner = Instance.new("UICorner")            ButtonCorner.CornerRadius = UDim.new(0, 6)            ButtonCorner.Parent = Button                        local ButtonLabel = Instance.new("TextLabel")            ButtonLabel.Name = "ButtonLabel"            ButtonLabel.Parent = Button            ButtonLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)            ButtonLabel.BackgroundTransparency = 1.000            ButtonLabel.Position = UDim2.new(0, 10, 0, 0)            ButtonLabel.Size = UDim2.new(1, -20, 1, 0)            ButtonLabel.Font = Enum.Font.Gotham            ButtonLabel.Text = name            ButtonLabel.TextColor3 = Color3.fromRGB(232, 17, 85)            ButtonLabel.TextSize = 14.000            ButtonLabel.TextXAlignment = Enum.TextXAlignment.Left                        Button.MouseButton1Click:Connect(function()                pcall(callback)            end)                        Button.MouseEnter:Connect(function()                TweenService:Create(Button, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(52, 52, 52)}):Play()            end)                        Button.MouseLeave:Connect(function()                TweenService:Create(Button, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(42, 42, 42)}):Play()            end)                        if description then                local Tooltip = Instance.new("TextLabel")                Tooltip.Name = "Tooltip"                Tooltip.Parent = Button                Tooltip.BackgroundColor3 = Color3.fromRGB(20, 20, 20)                Tooltip.BackgroundTransparency = 0                Tooltip.BorderSizePixel = 0                Tooltip.Position = UDim2.new(0, 0, 1, 5)                Tooltip.Size = UDim2.new(1, 0, 0, 0)                Tooltip.Font = Enum.Font.Gotham                Tooltip.Text = description                Tooltip.TextColor3 = Color3.fromRGB(200, 200, 200)                Tooltip.TextSize = 12                Tooltip.TextWrapped = true                Tooltip.TextXAlignment = Enum.TextXAlignment.Left                Tooltip.Visible = false                Tooltip.ZIndex = 10                                local TooltipCorner = Instance.new("UICorner")                TooltipCorner.CornerRadius = UDim.new(0, 4)                TooltipCorner.Parent = Tooltip                                local TooltipPadding = Instance.new("UIPadding")                TooltipPadding.Parent = Tooltip                TooltipPadding.PaddingLeft = UDim.new(0, 8)                TooltipPadding.PaddingRight = UDim.new(0, 8)                TooltipPadding.PaddingTop = UDim.new(0, 5)                TooltipPadding.PaddingBottom = UDim.new(0, 5)                                local textService = game:GetService("TextService")                local textBounds = textService:GetTextSize(description, 12, Enum.Font.Gotham, Vector2.new(Button.AbsoluteSize.X - 16, math.huge))                Tooltip.Size = UDim2.new(1, 0, 0, textBounds.Y + 10)                                Button.MouseEnter:Connect(function()                    Tooltip.Visible = true                end)                                Button.MouseLeave:Connect(function()                    Tooltip.Visible = false                end)            end        end                function PageFunctions:Toggle(name, default, callback, description)            local toggled = default or false                        local Toggle = Instance.new("Frame")            Toggle.Name = "Toggle"            Toggle.Parent = Page            Toggle.BackgroundColor3 = Color3.fromRGB(42, 42, 42)            Toggle.BorderSizePixel = 0            Toggle.Size = UDim2.new(1, -12, 0, 30)                        local ToggleCorner = Instance.new("UICorner")            ToggleCorner.CornerRadius = UDim.new(0, 6)            ToggleCorner.Parent = Toggle                        local ToggleLabel = Instance.new("TextLabel")            ToggleLabel.Name = "ToggleLabel"            ToggleLabel.Parent = Toggle            ToggleLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)            ToggleLabel.BackgroundTransparency = 1.000            ToggleLabel.Position = UDim2.new(0, 10, 0, 0)            ToggleLabel.Size = UDim2.new(1, -50, 1, 0)            ToggleLabel.Font = Enum.Font.Gotham            ToggleLabel.Text = name            ToggleLabel.TextColor3 = Color3.fromRGB(232, 17, 85)            ToggleLabel.TextSize = 14.000            ToggleLabel.TextXAlignment = Enum.TextXAlignment.Left                        local ToggleButton = Instance.new("TextButton")            ToggleButton.Name = "ToggleButton"            ToggleButton.Parent = Toggle            ToggleButton.AnchorPoint = Vector2.new(1, 0.5)            ToggleButton.BackgroundColor3 = toggled and Color3.fromRGB(232, 17, 85) or Color3.fromRGB(60, 60, 60)            ToggleButton.Position = UDim2.new(1, -10, 0.5, 0)            ToggleButton.Size = UDim2.new(0, 40, 0, 20)            ToggleButton.AutoButtonColor = false            ToggleButton.Font = Enum.Font.Gotham            ToggleButton.Text = ""            ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)            ToggleButton.TextSize = 14.000                        local ToggleButtonCorner = Instance.new("UICorner")            ToggleButtonCorner.CornerRadius = UDim.new(1, 0)            ToggleButtonCorner.Parent = ToggleButton                        local ToggleCircle = Instance.new("Frame")            ToggleCircle.Name = "ToggleCircle"            ToggleCircle.Parent = ToggleButton            ToggleCircle.AnchorPoint = Vector2.new(0, 0.5)            ToggleCircle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)            ToggleCircle.Position = toggled and UDim2.new(1, -18, 0.5, 0) or UDim2.new(0, 2, 0.5, 0)            ToggleCircle.Size = UDim2.new(0, 16, 0, 16)                        local ToggleCircleCorner = Instance.new("UICorner")            ToggleCircleCorner.CornerRadius = UDim.new(1, 0)            ToggleCircleCorner.Parent = ToggleCircle                        ToggleButton.MouseButton1Click:Connect(function()                toggled = not toggled                TweenService:Create(ToggleButton, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundColor3 = toggled and Color3.fromRGB(232, 17, 85) or Color3.fromRGB(60, 60, 60)}):Play()                TweenService:Create(ToggleCircle, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Position = toggled and UDim2.new(1, -18, 0.5, 0) or UDim2.new(0, 2, 0.5, 0)}):Play()                pcall(callback, toggled)            end)                        if description then                local Tooltip = Instance.new("TextLabel")                Tooltip.Name = "Tooltip"                Tooltip.Parent = Toggle                Tooltip.BackgroundColor3 = Color3.fromRGB(20, 20, 20)                Tooltip.BackgroundTransparency = 0                Tooltip.BorderSizePixel = 0                Tooltip.Position = UDim2.new(0, 0, 1, 5)                Tooltip.Size = UDim2.new(1, 0, 0, 0)                Tooltip.Font = Enum.Font.Gotham                Tooltip.Text = description                Tooltip.TextColor3 = Color3.fromRGB(200, 200, 200)                Tooltip.TextSize = 12                Tooltip.TextWrapped = true                Tooltip.TextXAlignment = Enum.TextXAlignment.Left                Tooltip.Visible = false                Tooltip.ZIndex = 10                                local TooltipCorner = Instance.new("UICorner")                TooltipCorner.CornerRadius = UDim.new(0, 4)                TooltipCorner.Parent = Tooltip                                local TooltipPadding = Instance.new("UIPadding")                TooltipPadding.Parent = Tooltip                TooltipPadding.PaddingLeft = UDim.new(0, 8)                TooltipPadding.PaddingRight = UDim.new(0, 8)                TooltipPadding.PaddingTop = UDim.new(0, 5)                TooltipPadding.PaddingBottom = UDim.new(0, 5)                                local textService = game:GetService("TextService")                local textBounds = textService:GetTextSize(description, 12, Enum.Font.Gotham, Vector2.new(Toggle.AbsoluteSize.X - 16, math.huge))                Tooltip.Size = UDim2.new(1, 0, 0, textBounds.Y + 10)                                Toggle.MouseEnter:Connect(function()                    Tooltip.Visible = true                end)                                Toggle.MouseLeave:Connect(function()                    Tooltip.Visible = false                end)            end        end                function PageFunctions:Slider(name, min, max, default, callback, description)            local Slider = Instance.new("Frame")            Slider.Name = "Slider"            Slider.Parent = Page            Slider.BackgroundColor3 = Color3.fromRGB(42, 42, 42)            Slider.BorderSizePixel = 0            Slider.Size = UDim2.new(1, -12, 0, 45)                        local SliderCorner = Instance.new("UICorner")            SliderCorner.CornerRadius = UDim.new(0, 6)            SliderCorner.Parent = Slider                        local SliderLabel = Instance.new("TextLabel")            SliderLabel.Name = "SliderLabel"            SliderLabel.Parent = Slider            SliderLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)            SliderLabel.BackgroundTransparency = 1.000            SliderLabel.Position = UDim2.new(0, 10, 0, 5)            SliderLabel.Size = UDim2.new(1, -70, 0, 15)            SliderLabel.Font = Enum.Font.Gotham            SliderLabel.Text = name            SliderLabel.TextColor3 = Color3.fromRGB(232, 17, 85)            SliderLabel.TextSize = 14.000            SliderLabel.TextXAlignment = Enum.TextXAlignment.Left                        local SliderValue = Instance.new("TextLabel")            SliderValue.Name = "SliderValue"            SliderValue.Parent = Slider            SliderValue.BackgroundColor3 = Color3.fromRGB(255, 255, 255)            SliderValue.BackgroundTransparency = 1.000            SliderValue.Position = UDim2.new(1, -60, 0, 5)            SliderValue.Size = UDim2.new(0, 50, 0, 15)            SliderValue.Font = Enum.Font.Gotham            SliderValue.Text = tostring(default)            SliderValue.TextColor3 = Color3.fromRGB(200, 200, 200)            SliderValue.TextSize = 14.000            SliderValue.TextXAlignment = Enum.TextXAlignment.Right                        local SliderBar = Instance.new("Frame")            SliderBar.Name = "SliderBar"            SliderBar.Parent = Slider            SliderBar.BackgroundColor3 = Color3.fromRGB(60, 60, 60)            SliderBar.BorderSizePixel = 0            SliderBar.Position = UDim2.new(0, 10, 0, 25)            SliderBar.Size = UDim2.new(1, -20, 0, 12)                        local SliderBarCorner = Instance.new("UICorner")            SliderBarCorner.CornerRadius = UDim.new(1, 0)            SliderBarCorner.Parent = SliderBar                        local SliderFill = Instance.new("Frame")            SliderFill.Name = "SliderFill"            SliderFill.Parent = SliderBar            SliderFill.BackgroundColor3 = Color3.fromRGB(232, 17, 85)            SliderFill.BorderSizePixel = 0            SliderFill.Size = UDim2.new((default - min) / (max - min), 0, 1, 0)                        local SliderFillCorner = Instance.new("UICorner")            SliderFillCorner.CornerRadius = UDim.new(1, 0)            SliderFillCorner.Parent = SliderFill                        local SliderButton = Instance.new("TextButton")            SliderButton.Name = "SliderButton"            SliderButton.Parent = SliderBar            SliderButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)            SliderButton.BackgroundTransparency = 1.000            SliderButton.Size = UDim2.new(1, 0, 1, 0)            SliderButton.Font = Enum.Font.Gotham            SliderButton.Text = ""            SliderButton.TextColor3 = Color3.fromRGB(255, 255, 255)            SliderButton.TextSize = 14.000                        local dragging = false                        SliderButton.MouseButton1Down:Connect(function()                dragging = true            end)                        UserInputService.InputEnded:Connect(function(input)                if input.UserInputType == Enum.UserInputType.MouseButton1 then                    dragging = false                end            end)                        SliderButton.MouseButton1Down:Connect(function()                dragging = true            end)                        UserInputService.InputChanged:Connect(function(input)                if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then                    local mousePos = UserInputService:GetMouseLocation().X                    local sliderPos = SliderBar.AbsolutePosition.X                    local sliderSize = SliderBar.AbsoluteSize.X                    local relativePos = math.clamp(mousePos - sliderPos, 0, sliderSize)                    local percentage = relativePos / sliderSize                    local value = math.floor(min + (max - min) * percentage)                                        SliderFill.Size = UDim2.new(percentage, 0, 1, 0)                    SliderValue.Text = tostring(value)                    pcall(callback, value)                end            end)                        if description then                local Tooltip = Instance.new("TextLabel")                Tooltip.Name = "Tooltip"                Tooltip.Parent = Slider                Tooltip.BackgroundColor3 = Color3.fromRGB(20, 20, 20)                Tooltip.BackgroundTransparency = 0                Tooltip.BorderSizePixel = 0                Tooltip.Position = UDim2.new(0, 0, 1, 5)                Tooltip.Size = UDim2.new(1, 0, 0, 0)                Tooltip.Font = Enum.Font.Gotham                Tooltip.Text = description                Tooltip.TextColor3 = Color3.fromRGB(200, 200, 200)                Tooltip.TextSize = 12                Tooltip.TextWrapped = true                Tooltip.TextXAlignment = Enum.TextXAlignment.Left                Tooltip.Visible = false                Tooltip.ZIndex = 10                                local TooltipCorner = Instance.new("UICorner")                TooltipCorner.CornerRadius = UDim.new(0, 4)                TooltipCorner.Parent = Tooltip                                local TooltipPadding = Instance.new("UIPadding")                TooltipPadding.Parent = Tooltip                TooltipPadding.PaddingLeft = UDim.new(0, 8)                TooltipPadding.PaddingRight = UDim.new(0, 8)                TooltipPadding.PaddingTop = UDim.new(0, 5)                TooltipPadding.PaddingBottom = UDim.new(0, 5)                                local textService = game:GetService("TextService")                local textBounds = textService:GetTextSize(description, 12, Enum.Font.Gotham, Vector2.new(Slider.AbsoluteSize.X - 16, math.huge))                Tooltip.Size = UDim2.new(1, 0, 0, textBounds.Y + 10)                                Slider.MouseEnter:Connect(function()                    Tooltip.Visible = true                end)                                Slider.MouseLeave:Connect(function()                    Tooltip.Visible = false                end)            end        end                function PageFunctions:Keybind(name, default, callback, description)            local keybind = default            local waitingForKey = false                        local Keybind = Instance.new("Frame")            Keybind.Name = "Keybind"            Keybind.Parent = Page            Keybind.BackgroundColor3 = Color3.fromRGB(42, 42, 42)            Keybind.BorderSizePixel = 0            Keybind.Size = UDim2.new(1, -12, 0, 30)                        local KeybindCorner = Instance.new("UICorner")            KeybindCorner.CornerRadius = UDim.new(0, 6)            KeybindCorner.Parent = Keybind                        local KeybindLabel = Instance.new("TextLabel")            KeybindLabel.Name = "KeybindLabel"            KeybindLabel.Parent = Keybind            KeybindLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)            KeybindLabel.BackgroundTransparency = 1.000            KeybindLabel.Position = UDim2.new(0, 10, 0, 0)            KeybindLabel.Size = UDim2.new(1, -120, 1, 0)            KeybindLabel.Font = Enum.Font.Gotham            KeybindLabel.Text = name            KeybindLabel.TextColor3 = Color3.fromRGB(232, 17, 85)            KeybindLabel.TextSize = 14.000            KeybindLabel.TextXAlignment = Enum.TextXAlignment.Left                        local KeybindButton = Instance.new("TextButton")            KeybindButton.Name = "KeybindButton"            KeybindButton.Parent = Keybind            KeybindButton.AnchorPoint = Vector2.new(1, 0.5)            KeybindButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)            KeybindButton.Position = UDim2.new(1, -10, 0.5, 0)            KeybindButton.Size = UDim2.new(0, 100, 0, 20)            KeybindButton.AutoButtonColor = false            KeybindButton.Font = Enum.Font.Gotham            KeybindButton.Text = keybind.Name            KeybindButton.TextColor3 = Color3.fromRGB(255, 255, 255)            KeybindButton.TextSize = 12.000                        local KeybindButtonCorner = Instance.new("UICorner")            KeybindButtonCorner.CornerRadius = UDim.new(0, 4)            KeybindButtonCorner.Parent = KeybindButton                        KeybindButton.MouseButton1Click:Connect(function()                waitingForKey = true                KeybindButton.Text = "..."            end)                        UserInputService.InputBegan:Connect(function(input, gameProcessed)                if waitingForKey and input.UserInputType == Enum.UserInputType.Keyboard then                    keybind = input.KeyCode                    KeybindButton.Text = input.KeyCode.Name                    waitingForKey = false                    pcall(callback, input.KeyCode)                end            end)                        UserInputService.InputBegan:Connect(function(input, gameProcessed)                if not waitingForKey and input.KeyCode == keybind then                    pcall(callback, input.KeyCode)                end            end)                        if description then                local Tooltip = Instance.new("TextLabel")                Tooltip.Name = "Tooltip"                Tooltip.Parent = Keybind                Tooltip.BackgroundColor3 = Color3.fromRGB(20, 20, 20)                Tooltip.BackgroundTransparency = 0                Tooltip.BorderSizePixel = 0                Tooltip.Position = UDim2.new(0, 0, 1, 5)                Tooltip.Size = UDim2.new(1, 0, 0, 0)                Tooltip.Font = Enum.Font.Gotham                Tooltip.Text = description                Tooltip.TextColor3 = Color3.fromRGB(200, 200, 200)                Tooltip.TextSize = 12                Tooltip.TextWrapped = true                Tooltip.TextXAlignment = Enum.TextXAlignment.Left                Tooltip.Visible = false                Tooltip.ZIndex = 10                                local TooltipCorner = Instance.new("UICorner")                TooltipCorner.CornerRadius = UDim.new(0, 4)                TooltipCorner.Parent = Tooltip                                local TooltipPadding = Instance.new("UIPadding")                TooltipPadding.Parent = Tooltip                TooltipPadding.PaddingLeft = UDim.new(0, 8)                TooltipPadding.PaddingRight = UDim.new(0, 8)                TooltipPadding.PaddingTop = UDim.new(0, 5)                TooltipPadding.PaddingBottom = UDim.new(0, 5)                                local textService = game:GetService("TextService")                local textBounds = textService:GetTextSize(description, 12, Enum.Font.Gotham, Vector2.new(Keybind.AbsoluteSize.X - 16, math.huge))                Tooltip.Size = UDim2.new(1, 0, 0, textBounds.Y + 10)                                Keybind.MouseEnter:Connect(function()                    Tooltip.Visible = true                end)                                Keybind.MouseLeave:Connect(function()                    Tooltip.Visible = false                end)            end        end                function PageFunctions:InputBox(name, placeholder, callback, description)            local InputBox = Instance.new("Frame")            InputBox.Name = "InputBox"            InputBox.Parent = Page            InputBox.BackgroundColor3 = Color3.fromRGB(42, 42, 42)            InputBox.BorderSizePixel = 0            InputBox.Size = UDim2.new(1, -12, 0, 30)                        local InputBoxCorner = Instance.new("UICorner")            InputBoxCorner.CornerRadius = UDim.new(0, 6)            InputBoxCorner.Parent = InputBox                        local InputBoxLabel = Instance.new("TextLabel")            InputBoxLabel.Name = "InputBoxLabel"            InputBoxLabel.Parent = InputBox            InputBoxLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)            InputBoxLabel.BackgroundTransparency = 1.000            InputBoxLabel.Position = UDim2.new(0, 10, 0, 0)            InputBoxLabel.Size = UDim2.new(0, 100, 1, 0)            InputBoxLabel.Font = Enum.Font.Gotham            InputBoxLabel.Text = name            InputBoxLabel.TextColor3 = Color3.fromRGB(232, 17, 85)            InputBoxLabel.TextSize = 14.000            InputBoxLabel.TextXAlignment = Enum.TextXAlignment.Left                        local InputBoxInput = Instance.new("TextBox")            InputBoxInput.Name = "InputBoxInput"            InputBoxInput.Parent = InputBox            InputBoxInput.AnchorPoint = Vector2.new(1, 0.5)            InputBoxInput.BackgroundColor3 = Color3.fromRGB(60, 60, 60)            InputBoxInput.Position = UDim2.new(1, -10, 0.5, 0)            InputBoxInput.Size = UDim2.new(0, 150, 0, 20)            InputBoxInput.Font = Enum.Font.Gotham            InputBoxInput.PlaceholderText = placeholder            InputBoxInput.Text = ""            InputBoxInput.TextColor3 = Color3.fromRGB(255, 255, 255)            InputBoxInput.TextSize = 12.000                        local InputBoxInputCorner = Instance.new("UICorner")            InputBoxInputCorner.CornerRadius = UDim.new(0, 4)            InputBoxInputCorner.Parent = InputBoxInput                        local InputBoxInputPadding = Instance.new("UIPadding")            InputBoxInputPadding.Parent = InputBoxInput            InputBoxInputPadding.PaddingLeft = UDim.new(0, 5)            InputBoxInputPadding.PaddingRight = UDim.new(0, 5)                        InputBoxInput.FocusLost:Connect(function(enterPressed)                if enterPressed then                    pcall(callback, InputBoxInput.Text)                end            end)                        if description then                local Tooltip = Instance.new("TextLabel")                Tooltip.Name = "Tooltip"                Tooltip.Parent = InputBox                Tooltip.BackgroundColor3 = Color3.fromRGB(20, 20, 20)                Tooltip.BackgroundTransparency = 0                Tooltip.BorderSizePixel = 0                Tooltip.Position = UDim2.new(0, 0, 1, 5)                Tooltip.Size = UDim2.new(1, 0, 0, 0)                Tooltip.Font = Enum.Font.Gotham                Tooltip.Text = description                Tooltip.TextColor3 = Color3.fromRGB(200, 200, 200)                Tooltip.TextSize = 12                Tooltip.TextWrapped = true                Tooltip.TextXAlignment = Enum.TextXAlignment.Left                Tooltip.Visible = false                Tooltip.ZIndex = 10                                local TooltipCorner = Instance.new("UICorner")                TooltipCorner.CornerRadius = UDim.new(0, 4)                TooltipCorner.Parent = Tooltip                                local TooltipPadding = Instance.new("UIPadding")                TooltipPadding.Parent = Tooltip                TooltipPadding.PaddingLeft = UDim.new(0, 8)                TooltipPadding.PaddingRight = UDim.new(0, 8)                TooltipPadding.PaddingTop = UDim.new(0, 5)                TooltipPadding.PaddingBottom = UDim.new(0, 5)                                local textService = game:GetService("TextService")                local textBounds = textService:GetTextSize(description, 12, Enum.Font.Gotham, Vector2.new(InputBox.AbsoluteSize.X - 16, math.huge))                Tooltip.Size = UDim2.new(1, 0, 0, textBounds.Y + 10)                                InputBox.MouseEnter:Connect(function()                    Tooltip.Visible = true                end)                                InputBox.MouseLeave:Connect(function()                    Tooltip.Visible = false                end)            end        end                function PageFunctions:Dropdown(name, options, callback, multi, description)            local Dropdown = Instance.new("Frame")            Dropdown.Name = "Dropdown"            Dropdown.Parent = Page            Dropdown.BackgroundColor3 = Color3.fromRGB(42, 42, 42)            Dropdown.BorderSizePixel = 0            Dropdown.Size = UDim2.new(1, -12, 0, 30)            Dropdown.ClipsDescendants = true                        local DropdownCorner = Instance.new("UICorner")            DropdownCorner.CornerRadius = UDim.new(0, 6)            DropdownCorner.Parent = Dropdown                        local DropdownLabel = Instance.new("TextLabel")            DropdownLabel.Name = "DropdownLabel"            DropdownLabel.Parent = Dropdown            DropdownLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)            DropdownLabel.BackgroundTransparency = 1.000            DropdownLabel.Position = UDim2.new(0, 10, 0, 0)            DropdownLabel.Size = UDim2.new(1, -40, 0, 30)            DropdownLabel.Font = Enum.Font.Gotham            DropdownLabel.Text = name            DropdownLabel.TextColor3 = Color3.fromRGB(232, 17, 85)            DropdownLabel.TextSize = 14.000            DropdownLabel.TextXAlignment = Enum.TextXAlignment.Left                        local DropdownButton = Instance.new("TextButton")            DropdownButton.Name = "DropdownButton"            DropdownButton.Parent = Dropdown            DropdownButton.AnchorPoint = Vector2.new(1, 0)            DropdownButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)            DropdownButton.BackgroundTransparency = 1.000            DropdownButton.Position = UDim2.new(1, -10, 0, 5)            DropdownButton.Size = UDim2.new(0, 20, 0, 20)            DropdownButton.Font = Enum.Font.Gotham            DropdownButton.Text = "▼"            DropdownButton.TextColor3 = Color3.fromRGB(232, 17, 85)            DropdownButton.TextSize = 14.000                        local DropdownContainer = Instance.new("Frame")            DropdownContainer.Name = "DropdownContainer"            DropdownContainer.Parent = Dropdown            DropdownContainer.BackgroundColor3 = Color3.fromRGB(255, 255, 255)            DropdownContainer.BackgroundTransparency = 1.000            DropdownContainer.Position = UDim2.new(0, 0, 0, 35)            DropdownContainer.Size = UDim2.new(1, 0, 1, -35)                        local DropdownList = Instance.new("UIListLayout")            DropdownList.Parent = DropdownContainer            DropdownList.HorizontalAlignment = Enum.HorizontalAlignment.Center            DropdownList.SortOrder = Enum.SortOrder.LayoutOrder            DropdownList.Padding = UDim.new(0, 2)                        local opened = false            local selected = multi and {} or nil                        local function createOption(option)                local OptionButton = Instance.new("TextButton")                OptionButton.Name = "OptionButton"                OptionButton.Parent = DropdownContainer                OptionButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)                OptionButton.BorderSizePixel = 0                OptionButton.Size = UDim2.new(1, -10, 0, 25)                OptionButton.AutoButtonColor = false                OptionButton.Font = Enum.Font.Gotham                OptionButton.Text = option                OptionButton.TextColor3 = Color3.fromRGB(255, 255, 255)                OptionButton.TextSize = 12.000                                local OptionCorner = Instance.new("UICorner")                OptionCorner.CornerRadius = UDim.new(0, 4)                OptionCorner.Parent = OptionButton                                OptionButton.MouseButton1Click:Connect(function()                    if multi then                        local index = table.find(selected, option)                        if index then                            table.remove(selected, index)                            OptionButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)                        else                            table.insert(selected, option)                            OptionButton.BackgroundColor3 = Color3.fromRGB(232, 17, 85)                        end                        pcall(callback, selected)                    else                        selected = option                        pcall(callback, option)                        for _, v in pairs(DropdownContainer:GetChildren()) do                            if v:IsA("TextButton") then                                v.BackgroundColor3 = Color3.fromRGB(60, 60, 60)                            end                        end                        OptionButton.BackgroundColor3 = Color3.fromRGB(232, 17, 85)                    end                end)                                OptionButton.MouseEnter:Connect(function()                    if not multi or not table.find(selected, option) then                        TweenService:Create(OptionButton, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(80, 80, 80)}):Play()                    end                end)                                OptionButton.MouseLeave:Connect(function()                    if multi then                        if table.find(selected, option) then                            OptionButton.BackgroundColor3 = Color3.fromRGB(232, 17, 85)                        else                            OptionButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)                        end                    else                        if selected == option then                            OptionButton.BackgroundColor3 = Color3.fromRGB(232, 17, 85)                        else                            OptionButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)                        end                    end                end)            end                        for _, option in ipairs(options) do                createOption(option)            end                        DropdownButton.MouseButton1Click:Connect(function()                opened = not opened                local targetSize = opened and UDim2.new(1, -12, 0, 35 + (#options * 27)) or UDim2.new(1, -12, 0, 30)                TweenService:Create(Dropdown, TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Size = targetSize}):Play()                DropdownButton.Text = opened and "▲" or "▼"            end)                        if description then                local Tooltip = Instance.new("TextLabel")                Tooltip.Name = "Tooltip"                Tooltip.Parent = Dropdown                Tooltip.BackgroundColor3 = Color3.fromRGB(20, 20, 20)                Tooltip.BackgroundTransparency = 0                Tooltip.BorderSizePixel = 0                Tooltip.Position = UDim2.new(0, 0, 1, 5)                Tooltip.Size = UDim2.new(1, 0, 0, 0)                Tooltip.Font = Enum.Font.Gotham                Tooltip.Text = description                Tooltip.TextColor3 = Color3.fromRGB(200, 200, 200)                Tooltip.TextSize = 12                Tooltip.TextWrapped = true                Tooltip.TextXAlignment = Enum.TextXAlignment.Left                Tooltip.Visible = false                Tooltip.ZIndex = 10                                local TooltipCorner = Instance.new("UICorner")                TooltipCorner.CornerRadius = UDim.new(0, 4)                TooltipCorner.Parent = Tooltip                                local TooltipPadding = Instance.new("UIPadding")                TooltipPadding.Parent = Tooltip                TooltipPadding.PaddingLeft = UDim.new(0, 8)                TooltipPadding.PaddingRight = UDim.new(0, 8)                TooltipPadding.PaddingTop = UDim.new(0, 5)                TooltipPadding.PaddingBottom = UDim.new(0, 5)                                local textService = game:GetService("TextService")                local textBounds = textService:GetTextSize(description, 12, Enum.Font.Gotham, Vector2.new(Dropdown.AbsoluteSize.X - 16, math.huge))                Tooltip.Size = UDim2.new(1, 0, 0, textBounds.Y + 10)                                Dropdown.MouseEnter:Connect(function()                    Tooltip.Visible = true                end)                                Dropdown.MouseLeave:Connect(function()                    Tooltip.Visible = false                end)            end                        local DropdownFunctions = {}                        function DropdownFunctions:Refresh(newOptions)                for _, v in pairs(DropdownContainer:GetChildren()) do                    if v:IsA("TextButton") then                        v:Destroy()                    end                end                                options = newOptions                selected = multi and {} or nil                                for _, option in ipairs(newOptions) do                    createOption(option)                end                                if opened then                    Dropdown.Size = UDim2.new(1, -12, 0, 35 + (#newOptions * 27))                end            end                        return DropdownFunctions        end                return PageFunctions    end        return TabFunctionsendreturn Library